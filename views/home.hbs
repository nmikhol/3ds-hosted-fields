<h1>Create Transaction</h1>


    <form action="/transaction" id="cc-form" method="post">

      <div class="form-group">
        <label class="control-label" for="email">Email address</label>
        <input type="email" class="form-control" id="email" placeholder="email">
      </div>

      <div class="form-group">
        <label class="control-label" for="cc-number">Credit Card Number</label>
        <div class="form-control" id="cc-number" placeholder="4111 1111 1111 1111"></div>
      </div>
      <div class="form-row">
        <div class="form-group">
          <label class="control-label" for="cvv">CVV</label>
          <div id="cvv" class="form-control"></div>
        </div>

        <div class="form-group ml-3" >
          <label class="control-label" for="expiration-date">Expiration Date</label>
          <div id="expiration-date" class="form-control" placeholder="04 / 2020"></div>
        </div>
    </div>

      <div class="form-group">
        <button type="submit" class="btn btn-primary">Pay</button>
      </div>

      </form>
    </form>



<script src="https://js.braintreegateway.com/web/3.55.0/js/client.min.js"></script>
<script src="https://js.braintreegateway.com/web/3.55.0/js/hosted-fields.min.js"></script>
<script>

let clientToken = `{{clientToken}}`
//console.log(clientToken)
let form = document.querySelector('#cc-form');
let submit = document.querySelector('input[type="submit"]');

     braintree.client.create({
       authorization: clientToken
     }, function (clientErr, clientInstance) {
       if (clientErr) {
         console.error(clientErr);
         return;
       }

       braintree.hostedFields.create({
         client: clientInstance,
         styles: {
           'input': {
             'font-size': '14px'
           },
           'input.invalid': {
             'color': 'red'
           },
           'input.valid': {
             'color': 'green'
           }
         },
         fields: {
           number: {
             selector: '#cc-number',
             placeholder: '4111111111111111'
           },
           cvv: {
             selector: '#cvv',
             placeholder: '123'
           },
           expirationDate: {
             selector: '#expiration-date',
             placeholder: '1/2020'
           }
         }
       }, function (hostedFieldsErr, hostedFieldsInstance) {
         if (hostedFieldsErr) {
           console.error(hostedFieldsErr);
           return;
         }

         submit.removeAttribute('disabled');

         form.addEventListener('submit', function (event) {
           event.preventDefault();

           hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
             if (tokenizeErr) {
               console.error(tokenizeErr);
               return;
             }

             console.log('Got a nonce: ' + payload.nonce);
           });
         }, false);
       });
     });

</script>
